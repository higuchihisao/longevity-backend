# Generated by Django 5.0.8 on 2025-09-14 16:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=120)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CASH", "Cash"),
                            ("BROKERAGE", "Brokerage / Taxable"),
                            ("RETIREMENT", "Retirement / Tax-Advantaged"),
                            ("OTHER", "Other"),
                        ],
                        default="BROKERAGE",
                        max_length=16,
                    ),
                ),
                ("broker", models.CharField(blank=True, default="", max_length=120)),
                (
                    "currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="PEN",
                        max_length=3,
                    ),
                ),
                (
                    "opening_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=16
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="Assumptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "inflation_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("2.00"), max_digits=5
                    ),
                ),
                (
                    "equity_return_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("7.00"), max_digits=5
                    ),
                ),
                (
                    "bond_return_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("3.00"), max_digits=5
                    ),
                ),
                (
                    "cash_return_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.50"), max_digits=5
                    ),
                ),
                (
                    "swr_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("4.00"), max_digits=5
                    ),
                ),
                ("rebalance_frequency_months", models.PositiveIntegerField(default=12)),
                ("montecarlo_trials", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assumptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ContributionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "amount_monthly",
                    models.DecimalField(decimal_places=2, max_digits=14),
                ),
                (
                    "annual_increase_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contribution_plans",
                        to="finance.account",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Expense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=120)),
                (
                    "amount_monthly",
                    models.DecimalField(decimal_places=2, max_digits=14),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("HOUSING", "Housing"),
                            ("FOOD", "Food"),
                            ("TRANSPORT", "Transport"),
                            ("HEALTH", "Health"),
                            ("EDUCATION", "Education"),
                            ("LEISURE", "Leisure"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=16,
                    ),
                ),
                ("is_fixed", models.BooleanField(default=True)),
                (
                    "currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="PEN",
                        max_length=3,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-amount_monthly"],
            },
        ),
        migrations.CreateModel(
            name="IncomeSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=120)),
                (
                    "amount_monthly",
                    models.DecimalField(decimal_places=2, max_digits=14),
                ),
                (
                    "growth_rate_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="PEN",
                        max_length=3,
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="income_sources",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("country", models.CharField(default="Peru", max_length=64)),
                (
                    "base_currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="PEN",
                        max_length=3,
                    ),
                ),
                (
                    "marginal_tax_rate_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "risk_profile",
                    models.CharField(
                        choices=[
                            ("CONSERVATIVE", "Conservative"),
                            ("MODERATE", "Moderate"),
                            ("AGGRESSIVE", "Aggressive"),
                        ],
                        default="MODERATE",
                        max_length=16,
                    ),
                ),
                ("target_retirement_age", models.PositiveIntegerField(default=65)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finance_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectionRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("as_of_date", models.DateField(default=django.utils.timezone.now)),
                ("horizon_years", models.PositiveIntegerField(default=60)),
                (
                    "target_retirement_age",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "swr_override_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=12,
                    ),
                ),
                (
                    "success_probability_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "estimated_exhaustion_age",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "portfolio_at_retirement",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "sustainable_monthly_spend",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=14, null=True
                    ),
                ),
                ("notes", models.TextField(blank=True, default="")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projection_runs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Security",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("ticker", models.CharField(max_length=32)),
                ("name", models.CharField(max_length=160)),
                (
                    "asset_class",
                    models.CharField(
                        choices=[
                            ("EQUITY", "Equities"),
                            ("BOND", "Bonds"),
                            ("CASH_EQ", "Cash & Equivalents"),
                            ("REIT", "Real Estate (REITs)"),
                            ("COMMODITY", "Commodities"),
                            ("OTHER", "Other"),
                        ],
                        default="EQUITY",
                        max_length=16,
                    ),
                ),
                (
                    "expense_ratio_pct",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("0.000"), max_digits=6
                    ),
                ),
                (
                    "expected_return_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("5.00"), max_digits=5
                    ),
                ),
                (
                    "volatility_annual_pct",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("10.00"), max_digits=5
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="USD",
                        max_length=3,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="securities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "ticker")},
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("date", models.DateField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("BUY", "Buy"),
                            ("SELL", "Sell"),
                            ("DIVIDEND", "Dividend"),
                            ("INTEREST", "Interest"),
                            ("CONTRIBUTION", "Contribution"),
                            ("WITHDRAWAL", "Withdrawal"),
                            ("FEE", "Fee"),
                            ("REBALANCE", "Rebalance"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "units",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=18, null=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=14, null=True
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=16)),
                (
                    "currency",
                    models.CharField(
                        choices=[("PEN", "PEN"), ("USD", "USD"), ("EUR", "EUR")],
                        default="USD",
                        max_length=3,
                    ),
                ),
                ("note", models.CharField(blank=True, default="", max_length=240)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="finance.account",
                    ),
                ),
                (
                    "security",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="finance.security",
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectionYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("year_index", models.PositiveIntegerField(help_text="0 = año base")),
                ("calendar_year", models.PositiveIntegerField()),
                ("age", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "start_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=18
                    ),
                ),
                (
                    "contributions",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=18
                    ),
                ),
                (
                    "withdrawals",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=18
                    ),
                ),
                (
                    "nominal_return_rate_pct",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("0.000"), max_digits=6
                    ),
                ),
                (
                    "inflation_rate_pct",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("0.000"), max_digits=6
                    ),
                ),
                (
                    "end_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=18
                    ),
                ),
                (
                    "run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="years",
                        to="finance.projectionrun",
                    ),
                ),
            ],
            options={
                "ordering": ["year_index"],
                "unique_together": {("run", "year_index")},
            },
        ),
        migrations.CreateModel(
            name="Holding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "units",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=18
                    ),
                ),
                (
                    "avg_unit_cost",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=14
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holdings",
                        to="finance.account",
                    ),
                ),
                (
                    "security",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="holdings",
                        to="finance.security",
                    ),
                ),
            ],
            options={
                "unique_together": {("account", "security")},
            },
        ),
    ]
